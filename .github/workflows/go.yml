name: To GitLab(registry.gitlab.com)

on:
  push:
    branches: [ CD-CI ]
  pull_request:
    branches: [ CD-CI ]

env:
  # TODO: Change variable to your image's name
  IMAGE_NAME: go-example-sqlquerybuilder
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 0

jobs:

  build:
    name: Build_and_push_gitlab_registry
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
        #goos: linux
        #goarch: amd64
      env:
        goos: linux
        goarch: amd64
        CGO_ENABLED: 0 

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      env:
        goos: linux
        goarch: amd64
        CGO_ENABLED: 0
      #run: go build -v ./...
      run: |
        echo $GOOS
        echo $GOARCH
        GOOS=linux
        echo ${GITHUB_SHA}
        GOARCH=amd64
        CGO_ENABLED=0
        # CGO_GOARCH=amd64ENABLED=0
        go build -v -ldflags="-X '${IMAGE_NAME}/version.Commit=${GITHUB_SHA}' -X '${IMAGE_NAME}/version.BuildTime=$(date +'%Y-%m-%dT%H:%M:%S')'" -o ${IMAGE_NAME}-linux64
        # go build -o ${IMAGE_NAME}-linux64
        echo ${IMAGE_NAME}
        echo ${IMAGE_NAME}-linux64
        echo $GOOS
        echo $GOARCH
      
    - name: Build image
      run: docker build . --file Dockerfile --tag latest
        
    - name: Login to GitLab Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry.gitlab.com
        username: ${{ secrets.GITLAB_USERNAME }}
        password: ${{ secrets.GITLAB_PASSWORD }}
        
    - name: Push image
      run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo VERSION=$VERSION
          docker tag latest registry.gitlab.com/smartaccount/backend-stack/registriesimagestore/$IMAGE_NAME:$VERSION
          docker push registry.gitlab.com/smartaccount/backend-stack/registriesimagestore/$IMAGE_NAME:$VERSION
          echo $IMAGE_NAME:$VERSION
